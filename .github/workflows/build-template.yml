name: build-template

on:
  workflow_call:
    inputs:
      IMAGE_CONTEXT:
        required: true
        type: string
      BUILD_CONTEXT:
        required: false
        type: string
        default: ""
      IMAGE_FILE:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string
      REGISTRY:
        required: true
        type: string
      BRANCH:
        required: false
        type: string
      PR_NUMBER:
        required: false
        type: string

    secrets:
      REGISTRY_USER:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.BRANCH }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ inputs.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          tags: |
            # The traceable PR tag. e.g., my-image:support-develop-pr125, ONLY created if a PR_NUMBER is passed in i.e when triggered by CI.
            type=raw,value=${{ inputs.BRANCH }}-pr${{ inputs.PR_NUMBER }},enable=${{ inputs.PR_NUMBER != '' }}

            # The branch tag. e.g., my-image:master
            type=ref,event=branch

            # The unique commit SHA tag. e.g., my-image:e4a9c8f
            type=sha,format=short

            # 'latest' tag, ONLY for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.IMAGE_CONTEXT }}
          build-contexts: ${{ inputs.BUILD_CONTEXT }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }} # version is automatically set to the first, most specific tag generated from meta step
          file: ${{ inputs.IMAGE_FILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
